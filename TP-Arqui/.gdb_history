n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
q
src-prof 
b pipe_functions 
c
n
b sys_kill
c
s
s
n
n
n
n
c
q
src-prof 
c
b kill
c
n
reverse-step
reverse-next
c
s
n
print pm->process_table[pid].pcb->name
q
sr
b kill_zombies
c
n
n
q
sr
c
c
b kill_zombies
c
n
q
sr
src-prof 
b mem_fn
c
n
s
c
n
n
b sys_mm_free
c
s
n
c
n
c
s
print mem_manager
print mem_manager info
info mem_manager
qq
q
sr
b create_semaphore_manager 
c
n
s
q
src-prof 
b create_memory_manager 
c
n
q
sr
c
b mem_fn
c
n
b sys_mem_status
c
s
n
n
n
until 90
n
print info->free_mem
b sys_mm_free
c
s
n
print mem_manager->free_array[block_idx]
print mem_manager->free_index
n
n
c
n
c
s
n
until 90
n
c
c
delete 
b sys_mm_malloc_asm 
c
q
sr
b sys_mm_malloc
c
delete
b mm_malloc
c
q
sr
b mm_malloc
c
c
c
q
src-prof 
c
b mm_free 
b mm_malloc 
c
c
c
c
n
print /x (void *)((char *)mem_manager->memory_start + block_idx * BLOCK_SIZE);
n
c
n
c
c
c
n
c
n
c
c
c
n
c
n
c
n
c
q
sr
c
b mm_malloc
b mm_free
c
c
c
c
n
q
sr
c
b mm_malloc 
b mm_free 
c
c
n
c
n
c
n
c
n
n
c
n
c
c
n
c
n
c
c
n
c
c
n
n
c
n
c
c
c
n
c
c
delete
c
q
src-prof 
b fn_wrapper
c
n
s
s
c
n
n
b waitpid
c
n
n
n
n
n
n
n
n
n
n
n
n
n
n
c
c
n
n
delete
n
n
s
s
n
n
s
n
q
